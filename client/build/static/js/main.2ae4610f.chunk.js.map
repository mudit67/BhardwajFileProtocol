{"version":3,"sources":["components/search.js","components/VidComponent.js","components/searchResult.js","components/CarouselItems.js","components/HomeComponent.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","state","respVal","vidName","menuToggle","DEBOUNCETIME","window","location","host","match","backendUrl","config","local","url","redirectToPage","bind","debounceTimeout","handleChange","handleSubmit","updateList","closeMenu","fileUpload","nextProps","nextState","event","preventDefault","this","menuToggleCallback","searchVal","quer","replace","history","push","setTimeout","fetch","then","response","json","data","setState","FormData","append","target","files","axios","post","console","log","alert","catch","error","value","page","parentCallback","rows","map","Val","index","NavLink","type","onClick","e","substring","length","href","className","key","Row","icon","faHome","name","onSubmit","autoComplete","placeholder","id","onChange","UncontrolledDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","style","position","faSearch","class","multiple","React","Component","withRouter","VidComponent","SearchResult","getData","prevProps","prevState","searchResponse","redirectToPlayer","PureComponent","Items","src","altText","caption","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","ClickHandler","slides","item","CarouselItem","onExiting","onExited","CarouselCaption","captionHeader","captionText","alt","Carousel","interval","CarouselIndicators","items","onClickHandler","newIndex","CarouselControl","direction","directionText","App","callbacksrc","shouldRender","maincontentCallback","MainContent","path","component","videoName","params","videoname","srcName","query","exact","to","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2ae4610f.chunk.js","sourcesContent":["import React from \"react\";\nimport config from \"../config.json\"\nimport {\n  Row,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  NavLink\n} from \"reactstrap\";\nimport { withRouter} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome,faSearch } from '@fortawesome/free-solid-svg-icons'\nimport  axios from \"axios\";\n\nclass Search extends React.Component {\n  shouldComponentUpdate(nextProps, nextState){\n    return true;\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      respVal: [],\n      vidName: null,\n      menuToggle: false,\n    };\n\n    // CONSTANTS\n    this.DEBOUNCETIME = 400; /*this the wait interval before sending call to backend*/\n    if (window.location.host.match(\"localhost\")) {\n      this.backendUrl = config.local\n    }else{\n      this.backendUrl = config.url\n    }\n    // this.redirectToPlayer = this.redirectToPlayer.bind(this);\n    this.redirectToPage = this.redirectToPage.bind(this);\n    this.debounceTimeout = 0;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateList = this.updateList.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n    this.fileUpload = this.fileUpload.bind(this);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    // console.log(event);\n    this.props.menuToggleCallback(false);\n    // this.props.searchResponseCallback(this.state.respVal);\n    // console.log(quer);\n    if(this.state.searchVal===\"\"){\n    }\n    else if(this.state.searchVal){\n      var quer = this.state.searchVal.replace(' ','+');\n      this.props.history.push(\"/search/\" + quer);\n    }\n  }\n\n  updateList() {\n    this.debounceTimeout = setTimeout(() => {\n        fetch( this.backendUrl + \"/search?q=\" + this.state.searchVal)\n        .then((response) => response.json())\n        .then((data) => {\n              this.setState({ respVal: data });\n        });\n    }, this.DEBOUNCETIME);\n  }\n\n  fileUpload(event) {\n    const data = new FormData();\n    data.append(\"file\", event.target.files[0]);\n    axios\n      .post(this.backendUrl + \"/uploadFile\", data, config)\n      .then((response) => {\n        console.log(response)\n        alert(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  handleChange(event) {\n    this.setState({ searchVal: event.target.value, menuToggle: true });\n    this.props.menuToggleCallback(true);\n    this.updateList();\n    if(event.target.value===\"\"){\n        this.props.menuToggleCallback(false);\n    }\n  }\n\n  closeMenu() {\n    this.props.menuToggleCallback(false);\n  }\n  redirectToPage(page){\n    this.props.history.push(page);\n    this.props.parentCallback(page);\n    // this.forceUpdate();\n    this.closeMenu();\n  }\n  render() {\n    var respVal = this.state.respVal;\n    var rows = [];\n    rows = respVal.map((Val, index) => {\n        return (\n                <NavLink\n                  type=\"button\"\n                  onClick={(e) => {e.preventDefault(); this.redirectToPage(`/player/${Val.substring(0, Val.length - 4)}`)}}\n                  href = {`/player/${Val.substring(0, Val.length - 4)}`}\n                  className=\"row nav-button ml-0 mr-0\"\n                  key={index}>\n                  {Val.substring(0, Val.length - 4)}\n                </NavLink>\n        );\n    });\n    return (\n      <>\n          <Row className=\"align-items-center navbar-home\">\n              <NavLink\n                className=\"col-2 col-md-1 pl-2 pl-md-3 pr-0 pt-2 pb-2 d-flex home-button align-items-center\"\n                type=\"button\"\n                onClick={() => {this.redirectToPage(\"/home\")}}>\n                <div className=\"d-none d-md-block mr-md-2\">\n                  Home\n                </div>\n                <FontAwesomeIcon icon={faHome} name={\"home\"} className=\"m-1\" />\n              </NavLink>\n            <div className=\"col-7 pl-1 pl-md-2 pr-0\">\n              <form className=\"row\" onSubmit={this.handleSubmit} autoComplete=\"off\">\n                <input\n                  type=\"search\"\n                  placeholder=\"Search...\"\n                  id=\"search\"\n                  value={this.state.searchVal || \"\"}\n                  onChange={this.handleChange}\n                  className=\"col-12\"\n                />\n              </form>\n              <UncontrolledDropdown isOpen={this.props.menuToggle} toggle={()=> {return(this.props.menuToggle);}} className=\"pr-5\">\n                <DropdownToggle className=\"d-none\" />\n                <DropdownMenu\n                  className=\"col-12 search-suggestions-container pt-0\"\n                  style={{ position: \"realtive\" }}\n                >\n                  {rows}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n            <div className=\"col-2 pl-0\">\n              <button\n                type=\"button\"\n                onClick={this.handleSubmit}\n                className=\"nav-button\"\n              >\n                <FontAwesomeIcon icon={faSearch} name={\"search\"}/>\n              </button>\n            </div>\n          </Row>\n          <Row style={{\"max-width\":\"100%\"}}>\n            <div class=\"form-group files ml-5\">\n              <label>Upload Your File </label>\n              <input\n                type=\"file\"\n                class=\"form-control\"\n                multiple=\"\"\n                onChange={this.fileUpload}\n              />\n            </div>\n          </Row>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Search);\n","// this handles all the videos\nimport React from 'react';\n\n\nconst VidComponent = (props) => {\n\t// console.log(this.props.srcName);\n\treturn(\n\t\t// main player\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\" >\n\t\t\t\t<div className=\"col-12 col-md-7\">\n\t\t\t\t\t\t<div className=\"frame-container\">\n\t\t\t\t\t\t\t<iframe className=\"playerframe\" title={props.srcName} src={`http://localhost:8000/files/${props.srcName}.mp4`} allowFullScreen />\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default VidComponent;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nclass SearchResult extends React.PureComponent {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\trespVal: []\n\t\t};\n\t\tthis.getData = this.getData.bind(this);\n\t}\n\tcomponentDidMount(){\n\t\tthis.getData();\n\t}\n\tgetSnapshotBeforeUpdate(prevProps, prevState){\n\t\tif(prevProps.searchVal!==this.props.searchVal){\n\t\t\tthis.getData();\n\t\t}\n\t\treturn(null);\n\t}\n\tgetData(){\n\t\tfetch ('http://localhost:8000/searchall?q=' + this.props.searchVal)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\t\t\tthis.setState({ respVal: data });\n\t\t});\n\t}\n\tredirectToPlayer(name,e){\n\t\te.preventDefault();\n\t\tvar page = `/player/${name}`\n    this.props.history.push(page);\n\t}\n\trender(){\n\t\tvar searchResponse = [];\n\t\tsearchResponse = this.state.respVal.map((Val,index) => {\n\t\t\t\treturn(\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"row nav-button search-result ml-2 mb-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\thref={`/player/${Val.substring(0,Val.length - 4)}`}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tonClick={(e) => {this.redirectToPlayer(Val.substring(0,Val.length - 4),e)}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{Val.substring(0,Val.length - 4)}\n\t\t\t\t\t</a>\n\t\t\t\t);\n\t\t\t});\n\t  return (\n\t    <div>\n\t\t\t\t{searchResponse}\n\t    </div>\n\t  );\n\t}\n}\nexport default withRouter(SearchResult);\n","const Items = [\n\t{\n\t\tsrc: './panda.jpeg',\n\t\taltText: 'Panda',\n\t\tcaption: 'Panda Music'\n\t},\n\t{\n\t\tsrc: './img.png',\n\t\taltText: 'Mudit',\n\t\tcaption: 'Mudit Music'\n\t},\n\t{\n\t\tsrc: './img.png',\n\t\taltText: 'Yash',\n\t\tcaption: 'Yash Music'\n\t}\n]\n\nexport default Items;","import React, {useState} from 'react';\nimport {Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n\t}\n\t from 'reactstrap';\nimport Items from './CarouselItems.js';\nimport {withRouter} from 'react-router-dom';\n\nconst HomeComponent = (props) => {\n\tconst [activeIndex, setActiveIndex] = useState(0);\n\tconst [animating, setAnimating] = useState(false);\n\n\tconst next = () => {\n\t    if (animating) return;\n\t    const nextIndex = activeIndex === Items.length - 1 ? 0 : activeIndex + 1;\n\t    setActiveIndex(nextIndex);\n\t}\n\n\tconst previous = () => {\n\t    if (animating) return;\n\t    const nextIndex = activeIndex === 0 ? Items.length - 1 : activeIndex - 1;\n\t    setActiveIndex(nextIndex);\n\t}\n\n\tconst goToIndex = (newIndex) => {\n\t    if (animating) return;\n\t    setActiveIndex(newIndex);\n\t}\n  const ClickHandler = (name,e) => {\n    e.preventDefault();\n    var page = `/player/${name}`\n    props.history.push(page);\n  };\n\tconst slides = Items.map((item) => {\n\t\treturn(\n\t\t\t<CarouselItem\n\t        onExiting={() => setAnimating(true)}\n\t        onExited={() => setAnimating(false)}\n\t        key={item.caption}\n\t        className=\"row pr-0\"\n\t      >\n          <a\n            className=\"d-none d-md-block\"\n            type=\"button\"\n            href={`/player/${item.altText}`}\n            onClick={(e) => {ClickHandler(item.altText,e)} }\n          >\n            <CarouselCaption className=\"offset-md-3\" captionHeader={item.caption} captionText=\"\"/>\n          </a>\n      <a\n        className=\"col-12 pr-0 col-md-4 link-img\"\n        type=\"button\"\n        href={`/player/${item.altText}`}\n        onClick={(e) => {ClickHandler(item.altText,e)} }\n        >\n          <img className=\"Carousel-img\" src={item.src} alt={item.altText}/>\n        </a>\n\t      </CarouselItem>\n\t\t);\n\t});\n\treturn(\n\t\t\t<div className=\"ml-0 mr-0 ml-md-4 pl-md-1 pr-0 pl-0 col-md-8 pr-md-0\">\n\t\t\t\t<Carousel\n\t\t\t\t\tactiveIndex={activeIndex}\n      \t\tnext={next}\n\t\t\t\t  previous={previous}\n          interval={3000}\n\t\t\t\t>\n  \t\t\t\t<CarouselIndicators\n  \t\t\t\t\titems={Items}\n  \t\t\t\t\tactiveIndex={activeIndex}\n  \t\t\t\t\tonClickHandler={goToIndex}\n  \t\t\t\t/>\n  \t\t\t\t{slides}\n  \t\t\t\t<CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n        \t<CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n\t\t\t\t</Carousel>\n\t\t\t</div>\n\t);\n}\n\nexport default withRouter(HomeComponent);\n// captionText={item.caption}\n","import React from \"react\";\nimport { Switch, Redirect, Route, BrowserRouter } from \"react-router-dom\";\nimport Search from \"./components/search.js\";\nimport VidComponent from \"./components/VidComponent.js\";\nimport SearchResult from \"./components/searchResult.js\";\nimport HomeComponent from \"./components/HomeComponent.js\";\nimport config from \"./config.json\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vidName: null,\n      menuToggle: false,\n      searchResponse:[]\n    };\n    if (window.location.host.match(\"localhost\")) {\n      this.backendUrl = config.local\n    }else{\n      this.backendUrl = config.url\n    }\n  }\n  render() {\n    return (\n      <>\n        <BrowserRouter>\n          <div className=\"page-wrapper\">\n            <Search\n              parentCallback={ (callbacksrc) => {\n                  this.setState({ shouldRender: callbacksrc});\n                }\n              }\n              menuToggleCallback={(toggle) => {\n                  if(toggle!==this.state.menuToggle){\n                    this.setState({menuToggle: toggle});\n                  }\n                  // console.log(this.state.menu);\n                }\n              }\n              menuToggle={this.state.menuToggle}\n            />\n          <MainContent\n            maincontentCallback = {(toggle) => {\n                this.setState({menuToggle: toggle});\n            }}\n            shouldRender={this.state.shouldRender}\n          />\n\n          </div>\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\n\n//\n// MainContent\n//\nclass MainContent extends React.Component{\n  shouldComponentUpdate(nextProps,nextState){\n    if(nextProps.shouldRender!==this.props.shouldRender){\n      console.log(true);\n      return(true);\n    }\n    else{\n      console.log(false);\n      return(false);\n    }\n  }\n  constructor(props){\n    super(props);\n    this.state = {\n      searchResponse:[],\n      shouldRender: false\n    };\n    this.closeMenu = this.closeMenu.bind(this);\n    if (window.location.host.match(\"localhost\")) {\n      this.backendUrl = config.local\n    }else{\n      this.backendUrl = config.url\n    }\n  }\n  closeMenu() {\n      // this.this.setState({shouldRender=true});\n      this.props.maincontentCallback(false);\n    }\n  render(){\n    // console.log(this.props.shouldRender);\n    const Result=({match}) => {\n      // console.log(\"result\");\n      var query = match.params.query.replace('+',' ');\n      return( <SearchResult searchVal={query} />);\n    };\n    const videoPlayer =({match}) => {\n      console.log(\"videos\");\n      var videoName = match.params.videoname.replace('+', ' ');\n      return(\n        <VidComponent srcName={videoName}/>\n      );\n    }\n    return(\n      <div onClick={this.closeMenu}>\n          <Switch>\n            <Route\n              path=\"/player/:videoname\"\n              component=\n                {videoPlayer}\n\n            />\n            <Route\n              path=\"/search/:query\"\n              component=\n                  {Result}\n              />\n\n            <Route\n              exact path=\"/home\"\n              component={\n                () => <HomeComponent/>\n              }\n              />\n          <Redirect to=\"/home\"/>\n          </Switch>\n        </div>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import \"../node_modules/video-react/dist/video-react.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}